--- a/scripts/plugininstall.py
+++ b/scripts/plugininstall.py
@@ -1685,7 +1685,7 @@
                 status_gz.write(data)
             status_gz.close()
             status.close()
-        except IOError:
+        except:
             pass
         try:
             if self.db.get('oem-config/enable') == 'true':
--- a/bin/ubiquity-wrapper
+++ b/bin/ubiquity-wrapper
@@ -11,7 +11,7 @@
 sys.path.insert(0, '/usr/lib/ubiquity')
 
 from ubiquity import osextras
-
+from subprocess import call
 
 def main():
     newargv = []
@@ -34,6 +34,10 @@
 
     if os.getuid() == 0:
         # no privilege escalation required
+
+        #Turn off all swaps to fix issues with zram
+        call(["swapoff", "--all"])
+
         inner = ['/usr/lib/ubiquity/bin/ubiquity'] + newargv
 
         # Make sure ibus works
--- a/ubiquity/frontend/gtk_ui.py
+++ b/ubiquity/frontend/gtk_ui.py
@@ -42,6 +42,7 @@
 import sys
 import syslog
 import traceback
+import textwrap
 
 import dbus
 from dbus.mainloop.glib import DBusGMainLoop
@@ -371,6 +372,10 @@
             self.live_installer.connect(
                 'key-press-event', self.a11y_profile_keys)
 
+    #Re-format error messages so each line is at most 100 characters long
+    def fix_msg_line_len(self, msg):
+        return '\n'.join(textwrap.wrap(msg, 100))
+
     def all_children(self, parent):
         if isinstance(parent, Gtk.Container):
             def recurse(x, y):
@@ -818,6 +823,7 @@
             else:
                 txt = self.finished_label.get_label()
                 txt = txt.replace('${RELEASE}', misc.get_release().name)
+            txt = self.fix_msg_line_len(txt)
             self.finished_label.set_label(txt)
             with misc.raised_privileges():
                 with open('/var/run/reboot-required', "w"):
@@ -1723,6 +1729,7 @@
         self.set_busy_cursor(False)
         if not msg:
             msg = title
+        msg = self.fix_msg_line_len(msg)
         dialog = Gtk.MessageDialog(
             self.live_installer, Gtk.DialogFlags.MODAL,
             Gtk.MessageType.ERROR, Gtk.ButtonsType.OK, msg)
@@ -1771,6 +1778,7 @@
         self.set_busy_cursor(False)
         if not msg:
             msg = title
+        msg = self.fix_msg_line_len(msg)
         buttons = []
         for option in options:
             if use_templates:
